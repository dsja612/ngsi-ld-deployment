version: "3.5"
services:
  # Orion is the context broker
  orion:
    image: fiware/orion-ld
    hostname: orion
    container_name: fiware-orion
    depends_on:
      - mongo-db
    expose:
      - "1026"
    ports:
      - "1026:1026" 
    command: -dbhost mongo-db -logLevel DEBUG
    # command: -logLevel DEBUG
    healthcheck:
      test: curl --fail -s http://orion:1026/version || exit 1
    # environment:
    #   - ORIONLD_MONGO_URI=${MONGOURL}
    networks:
      - orion-ld-network

  # Databases
  mongo-db:
    image: mongo:3.6
    hostname: mongo-db
    container_name: db-mongo
    expose:
      - "27017"
    ports:
      - "27017:27017" 
    command: --nojournal
    volumes:
      - mongo-db:/data
    networks:
      - orion-ld-network

  timescale:
    image: timescale/timescaledb-postgis:1.7.5-pg12
    hostname: timescale
    container_name: timescale
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U orion" ]
      interval: 15s
      timeout: 15s
      retries: 5
      start_period: 60s
    environment:
      - POSTGRES_USER=orion
      - POSTGRES_PASSWORD=orion
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - default

  mintaka:
    image: fiware/mintaka:0.4.3
    hostname: mintaka
    restart: always
    container_name: mintaka
    environment:
      - DATASOURCES_DEFAULT_HOST=timescale
      - DATASOURCES_DEFAULT_USERNAME=orion
      - DATASOURCES_DEFAULT_PASSWORD=orion
      - DATASOURCES_DEFAULT_DATABSE=orion
    expose:
      - "8080"
    ports:
      - "8080:8080"
    networks:
      - default

  proxy:
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    restart: always
    ports:
      - "80:80"
    depends_on:
      - orion
    networks:
      - orion-ld-network

volumes:
  mongo-db: ~

networks:
  orion-ld-network:
    driver: bridge