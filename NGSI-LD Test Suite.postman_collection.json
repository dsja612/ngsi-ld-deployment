{
	"info": {
		"_postman_id": "872a5761-00e9-4ce6-834c-710d2fe7e5a6",
		"name": "NGSI-LD Test Suite",
		"description": "Sample operations to help understand NGSI-LD context brokers. Based on the Orion-LD Context Broker",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "29655974"
	},
	"item": [
		{
			"name": "Setting up context internally (Optional)",
			"item": [
				{
					"name": "(1a) Adding a context, returns link to context file in header",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"@context\": {\r\n        \"Terms\": \"https://github.com/dsja612/ngsi-ld-deployment/blob/master/datamodels/terms.jsonld\",\r\n        \"CommandMessage\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/CommandMessage\",\r\n        \"CommandReturnMessage\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/CommandReturnMessage\",\r\n        \"StateMessage\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/StateMessage\",\r\n        \"StopCommandMessage\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/StopCommandMessage\",\r\n        \"StopCommandReturnMessage\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/StopCommandReturnMessage\",\r\n        \"accuracy\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/accuracy\",\r\n        \"altitude\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/altitude\",\r\n        \"battery\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/battery\",\r\n        \"command\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/command\",\r\n        \"commandTime\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/commandTime\",\r\n        \"covariance\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/covariance\",\r\n        \"current\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/current\",\r\n        \"destination\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/destination\",\r\n        \"errors\": \"ngsi-ld:errors\",\r\n        \"geographicPoint\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/geographicPoint\",\r\n        \"id\": \"@id\",\r\n        \"mapId\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/mapId\",\r\n        \"mode\": \"ngsi-ld:mode\",\r\n        \"ngsi-ld\": \"https://uri.etsi.org/ngsi-ld/\",\r\n        \"orientation2D\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/orientation2D\",\r\n        \"orientation3D\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/orientation3D\",\r\n        \"pitch\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/pitch\",\r\n        \"point2D\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/point2D\",\r\n        \"point3D\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/point3D\",\r\n        \"pose\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/pose\",\r\n        \"receivedCommand\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/receivedCommand\",\r\n        \"receivedStopCommand\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/receivedStopCommand\",\r\n        \"receivedTime\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/receivedTime\",\r\n        \"receivedWaypoints\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/receivedWaypoints\",\r\n        \"remainingPercentage\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/remainingPercentage\",\r\n        \"remainingTime\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/remainingTime\",\r\n        \"result\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/result\",\r\n        \"resultsOfStopCommand\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/resultsOfStopCommand\",\r\n        \"roll\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/roll\",\r\n        \"speed\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/speed\",\r\n        \"stopCommand\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/stopCommand\",\r\n        \"theta\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/theta\",\r\n        \"type\": \"@type\",\r\n        \"voltage\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/voltage\",\r\n        \"waypoints\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/waypoints\",\r\n        \"x\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/x\",\r\n        \"y\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/y\",\r\n        \"yaw\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/yaw\",\r\n        \"z\": \"https://smartdatamodels.org/dataModel.AutonomousMobileRobot/z\",\r\n        \"Camera\": \"https://smartdatamodels.org/dataModel.Device/Camera\",\r\n        \"Device\": \"https://smartdatamodels.org/dataModel.Device/Device\",\r\n        \"DeviceMeasurement\": \"https://smartdatamodels.org/dataModel.Device/DeviceMeasurement\",\r\n        \"DeviceModel\": \"https://smartdatamodels.org/dataModel.Device/DeviceModel\",\r\n        \"DeviceOperation\": \"https://smartdatamodels.org/dataModel.Device/DeviceOperation\",\r\n        \"PrivacyObject\": \"https://smartdatamodels.org/dataModel.Device/PrivacyObject\",\r\n        \"SmartMeteringObservation\": \"https://smartdatamodels.org/dataModel.Device/SmartMeteringObservation\",\r\n        \"address\": \"https://smartdatamodels.org/address\",\r\n        \"addressCountry\": \"https://smartdatamodels.org/addressCountry\",\r\n        \"addressLocality\": \"https://smartdatamodels.org/addressLocality\",\r\n        \"addressRegion\": \"https://smartdatamodels.org/addressRegion\",\r\n        \"addressedAt\": \"https://smartdatamodels.org/dataModel.Device/addressedAt\",\r\n        \"alternateName\": \"https://smartdatamodels.org/alternateName\",\r\n        \"annotatedMap\": \"https://smartdatamodels.org/dataModel.Device/annotatedMap\",\r\n        \"annotations\": \"https://smartdatamodels.org/annotations\",\r\n        \"areaServed\": \"https://smartdatamodels.org/areaServed\",\r\n        \"batteryLevel\": \"https://smartdatamodels.org/dataModel.Device/batteryLevel\",\r\n        \"bbox\": {\r\n            \"@container\": \"@list\",\r\n            \"@id\": \"geojson:bbox\"\r\n        },\r\n        \"brandName\": \"https://smartdatamodels.org/dataModel.Device/brandName\",\r\n        \"cameraName\": \"https://smartdatamodels.org/dataModel.Device/cameraName\",\r\n        \"cameraNum\": \"https://smartdatamodels.org/dataModel.Device/cameraNum\",\r\n        \"cameraOrientation\": \"https://smartdatamodels.org/dataModel.Device/cameraOrientation\",\r\n        \"cameraType\": \"https://smartdatamodels.org/dataModel.Device/cameraType\",\r\n        \"cameraUsage\": \"https://smartdatamodels.org/dataModel.Device/cameraUsage\",\r\n        \"category\": \"https://smartdatamodels.org/dataModel.Device/category\",\r\n        \"color\": \"https://smartdatamodels.org/color\",\r\n        \"comments\": \"https://smartdatamodels.org/dataModel.Device/comments\",\r\n        \"configuration\": \"https://smartdatamodels.org/dataModel.Device/configuration\",\r\n        \"controlledAsset\": \"https://smartdatamodels.org/dataModel.Device/controlledAsset\",\r\n        \"controlledProperty\": \"https://smartdatamodels.org/dataModel.Device/controlledProperty\",\r\n        \"coordinates\": {\r\n            \"@container\": \"@list\",\r\n            \"@id\": \"geojson:coordinates\"\r\n        },\r\n        \"crossborderTransfer\": \"https://smartdatamodels.org/dataModel.Device/crossborderTransfer\",\r\n        \"dataProvider\": \"https://smartdatamodels.org/dataProvider\",\r\n        \"dateCreated\": \"https://smartdatamodels.org/dateCreated\",\r\n        \"dateFirstUsed\": \"https://smartdatamodels.org/dataModel.Device/dateFirstUsed\",\r\n        \"dateInstalled\": \"https://smartdatamodels.org/dataModel.Device/dateInstalled\",\r\n        \"dateLastCalibration\": \"https://smartdatamodels.org/dataModel.Device/dateLastCalibration\",\r\n        \"dateLastValueReported\": \"https://smartdatamodels.org/dataModel.Device/dateLastValueReported\",\r\n        \"dateManufactured\": \"https://smartdatamodels.org/dataModel.Device/dateManufactured\",\r\n        \"dateModified\": \"https://smartdatamodels.org/dateModified\",\r\n        \"dateObserved\": \"https://smartdatamodels.org/dateObserved\",\r\n        \"depth\": \"https://smartdatamodels.org/dataModel.Device/depth\",\r\n        \"description\": \"http://purl.org/dc/terms/description\",\r\n        \"device\": \"https://smartdatamodels.org/dataModel.Device/device\",\r\n        \"deviceCategory\": \"https://smartdatamodels.org/dataModel.Device/deviceCategory\",\r\n        \"deviceClass\": \"https://smartdatamodels.org/dataModel.Device/deviceClass\",\r\n        \"deviceState\": \"https://smartdatamodels.org/dataModel.Device/deviceState\",\r\n        \"deviceType\": \"https://smartdatamodels.org/dataModel.Device/deviceType\",\r\n        \"direction\": \"https://smartdatamodels.org/dataModel.Device/direction\",\r\n        \"distance\": \"https://smartdatamodels.org/dataModel.Device/distance\",\r\n        \"district\": \"https://smartdatamodels.org/district\",\r\n        \"documentation\": \"https://smartdatamodels.org/dataModel.Device/documentation\",\r\n        \"dstAware\": \"https://smartdatamodels.org/dataModel.Device/dstAware\",\r\n        \"endDateTime\": \"https://smartdatamodels.org/dataModel.Device/endDateTime\",\r\n        \"endedAt\": \"https://smartdatamodels.org/dataModel.Device/endedAt\",\r\n        \"energyLimitationClass\": \"https://smartdatamodels.org/dataModel.Device/energyLimitationClass\",\r\n        \"entityVersion\": \"https://smartdatamodels.org/dataModel.Device/entityVersion\",\r\n        \"firmwareVersion\": \"https://smartdatamodels.org/dataModel.Device/firmwareVersion\",\r\n        \"floor\": \"https://smartdatamodels.org/dataModel.Device/floor\",\r\n        \"function\": \"https://smartdatamodels.org/dataModel.Device/function\",\r\n        \"hardwareVersion\": \"https://smartdatamodels.org/dataModel.Device/hardwareVersion\",\r\n        \"image\": \"https://smartdatamodels.org/image\",\r\n        \"imageSnapshot\": \"https://smartdatamodels.org/dataModel.Device/imageSnapshot\",\r\n        \"ipAddress\": \"https://smartdatamodels.org/dataModel.Device/ipAddress\",\r\n        \"isIndoor\": \"https://smartdatamodels.org/dataModel.Device/isIndoor\",\r\n        \"isPersonalData\": \"https://smartdatamodels.org/dataModel.Device/isPersonalData\",\r\n        \"legitimateInterest\": \"https://smartdatamodels.org/dataModel.Device/legitimateInterest\",\r\n        \"location\": \"ngsi-ld:location\",\r\n        \"macAddress\": \"https://smartdatamodels.org/dataModel.Device/macAddress\",\r\n        \"manufacturerName\": \"https://smartdatamodels.org/dataModel.Device/manufacturerName\",\r\n        \"mcc\": \"https://smartdatamodels.org/dataModel.Device/mcc\",\r\n        \"measurementType\": \"https://smartdatamodels.org/dataModel.Device/measurementType\",\r\n        \"mediaURL\": \"https://smartdatamodels.org/dataModel.Device/mediaURL\",\r\n        \"meterType\": \"https://smartdatamodels.org/dataModel.Device/meterType\",\r\n        \"mnc\": \"https://smartdatamodels.org/dataModel.Device/mnc\",\r\n        \"modelName\": \"https://smartdatamodels.org/dataModel.Device/modelName\",\r\n        \"name\": \"https://smartdatamodels.org/name\",\r\n        \"numValue\": \"https://smartdatamodels.org/dataModel.Device/numValue\",\r\n        \"offPeakConsumption\": \"https://smartdatamodels.org/dataModel.Device/offPeakConsumption\",\r\n        \"on\": \"https://smartdatamodels.org/dataModel.Device/on\",\r\n        \"operationType\": \"https://smartdatamodels.org/dataModel.Device/operationType\",\r\n        \"operator\": \"https://smartdatamodels.org/dataModel.Device/operator\",\r\n        \"osVersion\": \"https://smartdatamodels.org/dataModel.Device/osVersion\",\r\n        \"outlier\": \"https://smartdatamodels.org/dataModel.Device/outlier\",\r\n        \"owner\": \"https://smartdatamodels.org/owner\",\r\n        \"parameter\": \"https://smartdatamodels.org/dataModel.Device/parameter\",\r\n        \"peakConsumption\": \"https://smartdatamodels.org/dataModel.Device/peakConsumption\",\r\n        \"plannedEndAt\": \"https://smartdatamodels.org/dataModel.Device/plannedEndAt\",\r\n        \"plannedStartAt\": \"https://smartdatamodels.org/dataModel.Device/plannedStartAt\",\r\n        \"postOfficeBoxNumber\": \"https://smartdatamodels.org/postOfficeBoxNumber\",\r\n        \"postalCode\": \"https://smartdatamodels.org/postalCode\",\r\n        \"powerFactor\": \"https://smartdatamodels.org/dataModel.Device/powerFactor\",\r\n        \"provider\": \"https://smartdatamodels.org/dataModel.Device/provider\",\r\n        \"purpose\": \"https://smartdatamodels.org/dataModel.Device/purpose\",\r\n        \"recipientList\": \"https://smartdatamodels.org/dataModel.Device/recipientList\",\r\n        \"refDevice\": \"https://smartdatamodels.org/dataModel.Device/refDevice\",\r\n        \"refDeviceModel\": \"https://smartdatamodels.org/dataModel.Device/refDeviceModel\",\r\n        \"relativePosition\": \"https://smartdatamodels.org/dataModel.Device/relativePosition\",\r\n        \"reportedAt\": \"https://smartdatamodels.org/dataModel.Device/reportedAt\",\r\n        \"retentionPeriod\": \"https://smartdatamodels.org/dataModel.Device/retentionPeriod\",\r\n        \"rssi\": \"https://smartdatamodels.org/dataModel.Device/rssi\",\r\n        \"seeAlso\": \"https://smartdatamodels.org/seeAlso\",\r\n        \"serialNumber\": \"https://smartdatamodels.org/dataModel.Device/serialNumber\",\r\n        \"softwareVersion\": \"https://smartdatamodels.org/dataModel.Device/softwareVersion\",\r\n        \"source\": \"https://smartdatamodels.org/source\",\r\n        \"startDateTime\": \"https://smartdatamodels.org/dataModel.Device/startDateTime\",\r\n        \"startedAt\": \"https://smartdatamodels.org/dataModel.Device/startedAt\",\r\n        \"status\": \"ngsi-ld:status\",\r\n        \"streamName\": \"https://smartdatamodels.org/dataModel.Device/streamName\",\r\n        \"streamURL\": \"https://smartdatamodels.org/dataModel.Device/streamURL\",\r\n        \"streetAddress\": \"https://smartdatamodels.org/streetAddress\",\r\n        \"streetNr\": \"https://smartdatamodels.org/streetNr\",\r\n        \"supportedProtocol\": \"https://smartdatamodels.org/dataModel.Device/supportedProtocol\",\r\n        \"supportedUnits\": \"https://smartdatamodels.org/dataModel.Device/supportedUnits\",\r\n        \"textValue\": \"https://smartdatamodels.org/dataModel.Device/textValue\",\r\n        \"totalConsumption\": \"https://smartdatamodels.org/dataModel.Device/totalConsumption\",\r\n        \"unit\": \"https://smartdatamodels.org/dataModel.Device/unit\",\r\n        \"user\": \"https://smartdatamodels.org/dataModel.Device/user\",\r\n        \"value\": \"ngsi-ld:hasValue\",\r\n        \"humidity\": \"https://smartdatamodels.org/humidity\",\r\n        \"bearing\": \"https://smartdatamodels.org/bearing\",\r\n        \"pressure\": \"https://smartdatamodels.org/pressure\",\r\n        \"gyroscope\": \"https://placeholder.org/gyroscope\",\r\n        \"accelerometer\": \"https://placeholder.org/gyroscope\",\r\n        \"length\": \"https://qudt.org/vocab/quantitykind/Length\",\r\n        \"width\": \"https://qudt.org/vocab/quantitykind/Width\",\r\n        \"roomName\": \"Terms:roomName\",\r\n        \"locatedIn\": \"Terms:locatedIn\",\r\n        \"attachedTo\": \"Terms:attachedTo\"\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/jsonldContexts"
					},
					"response": []
				},
				{
					"name": "(1b) Adding link to a context",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    \"https://raw.githubusercontent.com/dsja612/ngsi-ld-deployment/master/datamodels/context.jsonld\"\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/jsonldContexts"
					},
					"response": []
				},
				{
					"name": "(2) Retrieve contexts",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "detail",
								"value": "true",
								"type": "text"
							}
						],
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/jsonldContexts"
					},
					"response": []
				},
				{
					"name": "Delete context",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/jsonldContexts/8bfe9ab6-c569-11ee-b590-0242ac1b0007"
					},
					"response": []
				}
			],
			"description": "To start utilizing the NGSI-LD API, we first have to upload our own context file. These context files help us to define shared vocabulary in our data model. Hence, we map terms we use in entity creation to their actual meanings in an ontology.\n\nThis ensures that when data is exchanged between different systems, the meaning of these terms is understood consistently by all parties."
		},
		{
			"name": "Creating a Room entity",
			"item": [
				{
					"name": "(1a) Create a Room Entity (Normalized)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"@context\": \"{{context-ld}}\",\r\n  \"id\": \"urn:ngsi-ld:Room:Room001\",\r\n  \"type\": \"Room\",\r\n  \"roomName\": {\r\n    \"type\": \"Property\",\r\n    \"value\": \"Pantry\"\r\n  },\r\n  \"location\": {\r\n    \"type\": \"GeoProperty\",\r\n    \"value\": {\r\n      \"type\": \"Point\",\r\n      \"coordinates\": [103.85004829669677, 1.2915542764390127]\r\n    }\r\n  },\r\n  \"length\": {\r\n    \"type\": \"Property\",\r\n    \"value\": 30,\r\n    \"unitCode\": \"MTR\",\r\n    \"unitSymbol\": {\r\n        \"type\": \"Property\",\r\n        \"value\": \"m\"\r\n    }\r\n  },\r\n  \"width\": {\r\n    \"type\": \"Property\",\r\n    \"value\": 30,\r\n    \"unitCode\": \"MTR\",\r\n    \"unitSymbol\": {\r\n        \"type\": \"Property\",\r\n        \"value\": \"m\"\r\n    }\r\n  }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/entities/"
					},
					"response": []
				},
				{
					"name": "(1b) Create a Room Entity (Key-Value Pairs)",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"urn:ngsi-ld:Room:Room002\",\r\n  \"type\": \"Room\",\r\n  \"roomName\": \"SNDGO Storeroom\",\r\n  \"location\": {\r\n    \"type\": \"Point\",\r\n    \"coordinates\": [103.85013613903543, 1.2913310392625017]\r\n  },\r\n  \"length\": {\r\n    \"value\": 20,\r\n    \"unitCode\": \"MTR\",\r\n    \"unitSymbol\": \"m\"\r\n  },\r\n  \"width\": {\r\n    \"value\": 20,\r\n    \"unitCode\": \"MTR\",\r\n    \"unitSymbol\": \"m\"\r\n  }\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/entities/"
					},
					"response": []
				},
				{
					"name": "(2) View all Room entities",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities/?type=Room",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "Room"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting an entity",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/entities/urn:ngsi-ld:Room:Room001"
					},
					"response": []
				}
			],
			"description": "To start off, we first create a Room entity. In this example, a Room entity is an enclosed space that sensors, robots or cameras can be located in."
		},
		{
			"name": "Provisioning devices to IOT Agent",
			"item": [
				{
					"name": "(1) Check if the IOT Agent is running",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{gateway}}/api/iot/provision/about"
					},
					"response": []
				},
				{
					"name": "(2) Provisioning an EnvironmentalSensor of type Device",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"devices\": [\r\n    {\r\n      \"device_id\": \"EnvironmentalSensor001\",\r\n      \"entity_name\": \"urn:ngsi-ld:Device:EnvironmentalSensor001\",\r\n      \"entity_type\": \"Device\",\r\n      \"attributes\": [\r\n        {\r\n          \"name\": \"temperature\",\r\n          \"type\": \"Property\",\r\n          \"metadata\": {\r\n              \"unitCode\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"CEL\"\r\n              },\r\n              \"unitSymbol\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"°C\"\r\n              }\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"humidity\",\r\n          \"type\": \"Property\",\r\n          \"metadata\": {\r\n              \"unitCode\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"P1\" \r\n              },\r\n              \"unitSymbol\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"%RH\"\r\n              }\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"bearing\",\r\n          \"type\": \"Property\",\r\n          \"metadata\": {\r\n              \"unitCode\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"D76\" \r\n              },\r\n              \"unitSymbol\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"Gs\"\r\n              }\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"pressure\",\r\n          \"type\": \"Property\",\r\n          \"metadata\": {\r\n              \"unitCode\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"P82\" \r\n              },\r\n              \"unitSymbol\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"hPA\"\r\n              }\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"gyroscope\",\r\n          \"type\": \"Property\"\r\n        },\r\n        {\r\n          \"name\": \"accelerometer\",\r\n          \"type\": \"Property\"\r\n        }\r\n      ],\r\n      \"static_attributes\": [\r\n        {\r\n          \"name\": \"locatedIn\",\r\n          \"type\": \"Relationship\",\r\n          \"value\": \"urn:ngsi-ld:Room:Room001\"\r\n        },\r\n        {\r\n          \"name\": \"attachedTo\",\r\n          \"type\": \"Relationship\",\r\n          \"value\": \"urn:ngsi-ld:Camera:Camera001\"\r\n        },\r\n        {\r\n          \"name\": \"deviceType\",\r\n          \"type\": \"Property\",\r\n          \"value\": \"EnvironmentalSensor\"\r\n        }\r\n      ],\r\n      \"protocol\": \"JSON\",\r\n      \"transport\": \"MQTT\",\r\n      \"timezone\": \"Asia/Kuala_Lumpur\"\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/iot/provision/devices"
					},
					"response": []
				},
				{
					"name": "(3) Provisioning a Camera",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"devices\": [\r\n    {\r\n      \"device_id\": \"Camera001\",\r\n      \"entity_name\": \"urn:ngsi-ld:Camera:Camera001\",\r\n      \"entity_type\": \"Camera\",\r\n      \"attributes\": [\r\n        {\r\n          \"name\": \"on\",\r\n          \"type\": \"Property\"\r\n        },\r\n        {\r\n          \"name\": \"mediaURL\",\r\n          \"type\": \"Property\"\r\n        },\r\n        {\r\n          \"name\": \"startDateTime\",\r\n          \"type\": \"Property\"\r\n        },\r\n        {\r\n          \"name\": \"confidence\",\r\n          \"type\": \"Property\",\r\n          \"metadata\": {\r\n              \"unitCode\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"P1\" \r\n              },\r\n              \"unitSymbol\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"%\"\r\n              }\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"names\",\r\n          \"type\": \"Property\"\r\n        }\r\n      ],\r\n      \"static_attributes\": [\r\n        {\r\n          \"name\": \"cameraName\",\r\n          \"type\": \"Text\",\r\n          \"value\": \"Camera001\"\r\n        },\r\n        {\r\n          \"name\": \"cameraOrientation\",\r\n          \"type\": \"Text\",\r\n          \"value\": \"top-down\"\r\n        },\r\n        {\r\n          \"name\": \"cameraType\",\r\n          \"type\": \"Text\",\r\n          \"value\": \"Fixed\"\r\n        },\r\n        {\r\n          \"name\": \"cameraUsage\",\r\n          \"type\": \"Text\",\r\n          \"value\": \"Surveillance\"\r\n        },\r\n        {\r\n          \"name\": \"locatedIn\",\r\n          \"type\": \"Relationship\",\r\n          \"value\": \"urn:ngsi-ld:Room:Room001\"\r\n        }\r\n      ],\r\n      \"protocol\": \"JSON\",\r\n      \"transport\": \"MQTT\",\r\n      \"timezone\": \"Asia/Kuala_Lumpur\"\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/iot/provision/devices"
					},
					"response": []
				},
				{
					"name": "(4) Provisioning a Robot",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"devices\": [\r\n    {\r\n      \"device_id\": \"Robot001\",\r\n      \"entity_name\": \"urn:ngsi-ld:Robot:Robot001\",\r\n      \"entity_type\": \"Robot\",\r\n      \"attributes\": [\r\n        {\r\n          \"name\": \"x\",\r\n          \"type\": \"Property\"\r\n        },\r\n        {\r\n          \"name\": \"y\",\r\n          \"type\": \"Property\"\r\n        },\r\n        {\r\n          \"object_id\": \"h\",\r\n          \"name\": \"heading\",\r\n          \"type\": \"Property\",\r\n          \"metadata\": {\r\n              \"unitCode\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"DD\" \r\n              },\r\n              \"unitSymbol\": {\r\n                \"type\": \"Text\",\r\n                \"value\": \"°\"\r\n              }\r\n          }\r\n        },\r\n        {\r\n          \"name\": \"command\",\r\n          \"type\": \"Property\"\r\n        },\r\n        {\r\n          \"name\": \"status\",\r\n          \"type\": \"Property\"\r\n        }\r\n      ],\r\n      \"static_attributes\": [\r\n        {\r\n          \"name\": \"robotName\",\r\n          \"type\": \"Text\",\r\n          \"value\": \"Robot001\"\r\n        },\r\n        {\r\n          \"name\": \"robotType\",\r\n          \"type\": \"Text\",\r\n          \"value\": \"PatrolRobot\"\r\n        },\r\n        {\r\n          \"name\": \"locatedIn\",\r\n          \"type\": \"Relationship\",\r\n          \"value\": \"urn:ngsi-ld:Room:Room002\"\r\n        }\r\n      ],\r\n      \"protocol\": \"JSON\",\r\n      \"transport\": \"MQTT\",\r\n      \"timezone\": \"Asia/Kuala_Lumpur\"\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/iot/provision/devices"
					},
					"response": []
				},
				{
					"name": "(5) List all provisioned devices",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							}
						],
						"url": "{{gateway}}/api/iot/provision/devices",
						"description": "This example lists all provisioned devices by making a GET request to the `/iot/devices` endpoint.\n\nThe response includes all the commands and attributes mappings associated with all devices"
					},
					"response": []
				},
				{
					"name": "Delete provisioned EnvironmentalSensor",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/iot/provision/devices/EnvironmentalSensor001"
					},
					"response": []
				},
				{
					"name": "Delete provisioned Camera",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"url": "{{gateway}}/api/iot/provision/devices/Camera001"
					},
					"response": []
				},
				{
					"name": "Delete provisioned Robot",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/iot/provision/devices/Robot001"
					},
					"response": []
				}
			]
		},
		{
			"name": "Updating values to IOT agents using POST requests",
			"item": [
				{
					"name": "(1) Patching Camera data in IOT Agent",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot"
							},
							{
								"key": "fiware-servicepath",
								"value": "/"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"static_attributes\": [\n    {\n        \"name\": \"cameraName\",\n        \"type\": \"Text\",\n        \"value\": \"Camera001\"\n    },\n    {\n        \"name\": \"cameraOrientation\",\n        \"type\": \"Text\",\n        \"value\": \"Wall-mounted\"\n    },\n    {\n        \"name\": \"cameraType\",\n        \"type\": \"Text\",\n        \"value\": \"Fixed\"\n    },\n    {\n        \"name\": \"cameraUsage\",\n        \"type\": \"Text\",\n        \"value\": \"Human Traffic Monitoring\"\n    },\n    {\n        \"name\": \"locatedIn\",\n        \"type\": \"Relationship\",\n        \"value\": \"urn:ngsi-ld:Room:Room001\"\n    },\n    {\n        \"name\": \"attachedTo\",\n        \"type\": \"Relationship\",\n        \"value\": \"urn:ngsi-ld:Robot:Robot001\"\n    }\n    ]\n}\n"
						},
						"url": "{{gateway}}/api/iot/provision/devices/Camera001",
						"description": "Before we wire-up the context broker, we can test that a command can be send to a device by making a PATCH request\ndirectly to the IoT Agent's North Port using the `/ngsi-ld/v1/entities/` endpoint. It is this endpoint that will\neventually be invoked by the context broker once we have connected it up. To test the configuration you can run the\ncommand directly as shown:\n\nIf you are viewing the device monitor page, you can also see the state of the water sprinkler change.\n\n![](https://fiware.github.io/tutorials.IoT-Agent/img/water-on.gif)\n"
					},
					"response": []
				},
				{
					"name": "(2) Updating EnvironmentalSensor through HTTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "link",
								"value": "<http://localhost:1026/ngsi-ld/v1/jsonldContexts/b813cc1a-ac92-11ee-8358-0242ac120004>;rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"t\": 30,\r\n    \"b\": 250\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{gateway}}/api/iot/update/?i=EnvironmentalSensor001&k=1234",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"iot",
								"update",
								""
							],
							"query": [
								{
									"key": "i",
									"value": "EnvironmentalSensor001"
								},
								{
									"key": "k",
									"value": "1234"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "(3) Updating Camera through HTTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "link",
								"value": "<http://localhost:1026/ngsi-ld/v1/jsonldContexts/b813cc1a-ac92-11ee-8358-0242ac120004>;rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"names\": [\r\n        \"Dylan\",\r\n        \"Youwei\",\r\n        \"Xinwei\"\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{gateway}}/api/iot/update/?i=Camera001&k=1234",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"iot",
								"update",
								""
							],
							"query": [
								{
									"key": "i",
									"value": "Camera001"
								},
								{
									"key": "k",
									"value": "1234"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "(4) Updating Robot through HTTP",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "link",
								"value": "<http://localhost:1026/ngsi-ld/v1/jsonldContexts/b813cc1a-ac92-11ee-8358-0242ac120004>;rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"x\": 10,\r\n    \"y\": 15\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{gateway}}/api/iot/update/?i=Robot001&k=1234",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"iot",
								"update",
								""
							],
							"query": [
								{
									"key": "i",
									"value": "Robot001"
								},
								{
									"key": "k",
									"value": "1234"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "(5) View EnvironmentalSensor updates",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities/urn:ngsi-ld:Device:EnvironmentalSensor001",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities",
								"urn:ngsi-ld:Device:EnvironmentalSensor001"
							],
							"query": [
								{
									"key": "q",
									"value": "",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "(5) View Camera updates",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities/?type=Camera",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "",
									"disabled": true
								},
								{
									"key": "type",
									"value": "Camera"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "(5) View Robot updates",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json",
								"type": "text",
								"disabled": true
							},
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities/?type=Camera",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities",
								""
							],
							"query": [
								{
									"key": "q",
									"value": "",
									"disabled": true
								},
								{
									"key": "type",
									"value": "Camera"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deleting Entities",
			"item": [
				{
					"name": "IOT Agent",
					"item": [
						{
							"name": "Delete provisioned EnvironmentalSensor",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "fiware-service",
										"value": "openiot",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{gateway}}/api/iot/provision/devices/EnvironmentalSensor001"
							},
							"response": []
						},
						{
							"name": "Delete provisioned Camera",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "fiware-service",
										"value": "openiot",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{gateway}}/api/iot/provision/devices/Camera001"
							},
							"response": []
						},
						{
							"name": "Delete provisioned Robot",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "fiware-service",
										"value": "openiot",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{gateway}}/api/iot/provision/devices/Robot001"
							},
							"response": []
						}
					]
				},
				{
					"name": "Context Broker",
					"item": [
						{
							"name": "Delete Room",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "fiware-service",
										"value": "openiot",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{gateway}}/api/orion/ngsi-ld/v1/entities/urn:ngsi-ld:Room:Room001"
							},
							"response": []
						},
						{
							"name": "Delete EnvironmentalSensor",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "fiware-service",
										"value": "openiot",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{gateway}}/api/orion/ngsi-ld/v1/entities/urn:ngsi-ld:Device:EnvironmentalSensor001"
							},
							"response": []
						},
						{
							"name": "Delete Camera",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "fiware-service",
										"value": "openiot",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{gateway}}/api/orion/ngsi-ld/v1/entities/urn:ngsi-ld:Camera:Camera001"
							},
							"response": []
						},
						{
							"name": "Delete Robot",
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "fiware-service",
										"value": "openiot",
										"type": "text"
									},
									{
										"key": "fiware-servicepath",
										"value": "/",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": "{{gateway}}/api/orion/ngsi-ld/v1/entities/urn:ngsi-ld:Robot:Robot001"
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Querying Context Broker",
			"item": [
				{
					"name": "Find all entities of type Room",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities?type=Room",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "type",
									"value": "Room"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all entities of type Device",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities?type=Device",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "type",
									"value": "Device"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all entities of type Camera",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities?type=Camera",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "type",
									"value": "Camera"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all entities of type Robot",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities?type=Robot",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "type",
									"value": "Robot"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all entities in Room001",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities?q=locatedIn==%22urn:ngsi-ld:Room:Room001%22",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "q",
									"value": "locatedIn==%22urn:ngsi-ld:Room:Room001%22"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find all entities in Room002",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							},
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/orion/ngsi-ld/v1/entities?q=locatedIn==%22urn:ngsi-ld:Room:Room002%22",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"orion",
								"ngsi-ld",
								"v1",
								"entities"
							],
							"query": [
								{
									"key": "q",
									"value": "locatedIn==%22urn:ngsi-ld:Room:Room002%22"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Subscriptions",
			"item": [
				{
					"name": "Subscribe to changes in Temperature from any Device",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"Subscribe to changes in Temperature\",\r\n  \"type\": \"Subscription\",\r\n  \"entities\": [{\"type\": \"Device\"}],\r\n  \"watchedAttributes\": [\"temperature\"],\r\n  \"notification\": {\r\n    \"format\": \"keyValues\",\r\n    \"endpoint\": {\r\n      \"uri\": \"http://testurl.com/v1/save\",\r\n      \"accept\": \"application/json\"\r\n    }\r\n  },\r\n  \"@context\": \"{{context-ld}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/subscriptions"
					},
					"response": []
				},
				{
					"name": "Subscribe to temperature in Room001 falling below 15, retrieve temperature data",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/ld+json",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"description\": \"Subscribe to temperature falling below 15\",\r\n  \"type\": \"Subscription\",\r\n  \"entities\": [{\"type\": \"Device\"}],\r\n  \"watchedAttributes\": [\"temperature\"],\r\n  \"q\": \"temperature<15;locatedIn==%22urn:ngsi-ld:Room:Room001%22\",\r\n  \"notification\": {\r\n    \"format\": \"keyValues\",\r\n    \"attributes\": [\"temperature\"],\r\n    \"endpoint\": {\r\n      \"uri\": \"https://asia-southeast1-composite-silo-413107.cloudfunctions.net/temperature_update\",\r\n      \"accept\": \"application/json\"\r\n    }\r\n  },\r\n  \"@context\": \"{{context-ld}}\"\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/subscriptions"
					},
					"response": []
				},
				{
					"name": "Get all subscriptions",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "",
								"type": "text"
							}
						],
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/subscriptions"
					},
					"response": []
				},
				{
					"name": "Deleting a subscription",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "fiware-service",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "fiware-servicepath",
								"value": "/",
								"type": "text"
							}
						],
						"url": "{{gateway}}/api/orion/ngsi-ld/v1/subscriptions/urn:ngsi-ld:Subscription:c26c5af0-d15f-11ee-99f5-0242ac160005"
					},
					"response": []
				}
			]
		},
		{
			"name": "Mintaka",
			"item": [
				{
					"name": "Check that Mintaka is running",
					"request": {
						"method": "GET",
						"header": [],
						"url": "{{gateway}}/api/mintaka/info",
						"description": "Once Mintaka is running, you can check the status by making an HTTP request to the `info` endpoint on the exposed port.  \nSince the configuration includes `ENDPOINTS_INFO_ENABLED=true` and `ENDPOINTS_INFO_SENSITIVE=false` the endpoint should return a response"
					},
					"response": []
				},
				{
					"name": "Get last 5 updates to EnvironmentalSensor001",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "NGSILD-Tenant",
								"value": "openiot",
								"type": "text"
							},
							{
								"key": "Origin",
								"value": "http://postman.com/",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/mintaka/temporal/entities/urn:ngsi-ld:Device:EnvironmentalSensor001?lastN=5",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"mintaka",
								"temporal",
								"entities",
								"urn:ngsi-ld:Device:EnvironmentalSensor001"
							],
							"query": [
								{
									"key": "lastN",
									"value": "5"
								}
							]
						},
						"description": "Once Mintaka is running, you can check the status by making an HTTP request to the `info` endpoint on the exposed port.  \nSince the configuration includes `ENDPOINTS_INFO_ENABLED=true` and `ENDPOINTS_INFO_SENSITIVE=false` the endpoint should return a response"
					},
					"response": []
				},
				{
					"name": "Get last 5 updates to temperature from EnvironmentalSensor001",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "NGSILD-Tenant",
								"value": "openiot",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/mintaka/temporal/entities/urn:ngsi-ld:Device:EnvironmentalSensor001?lastN=5&attrs=temperature",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"mintaka",
								"temporal",
								"entities",
								"urn:ngsi-ld:Device:EnvironmentalSensor001"
							],
							"query": [
								{
									"key": "lastN",
									"value": "5"
								},
								{
									"key": "attrs",
									"value": "temperature"
								}
							]
						},
						"description": "Once Mintaka is running, you can check the status by making an HTTP request to the `info` endpoint on the exposed port.  \nSince the configuration includes `ENDPOINTS_INFO_ENABLED=true` and `ENDPOINTS_INFO_SENSITIVE=false` the endpoint should return a response"
					},
					"response": []
				},
				{
					"name": "Get names of persons spotted in Room001",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Link",
								"value": "<{{context-ld}}>; rel=\"http://www.w3.org/ns/json-ld#context\"; type=\"application/ld+json\"",
								"type": "text"
							},
							{
								"key": "NGSILD-Tenant",
								"value": "openiot",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{gateway}}/api/mintaka/temporal/entities/?type=Camera&attrs=names&timeproperty=modifiedAt&q=locatedIn==%22urn:ngsi-ld:Room:Room001%22&timerel=before&timeAt=2024-02-16T09:36:30.184Z&options=temporalValues",
							"host": [
								"{{gateway}}"
							],
							"path": [
								"api",
								"mintaka",
								"temporal",
								"entities",
								""
							],
							"query": [
								{
									"key": "type",
									"value": "Camera"
								},
								{
									"key": "attrs",
									"value": "names"
								},
								{
									"key": "timeproperty",
									"value": "modifiedAt"
								},
								{
									"key": "q",
									"value": "locatedIn==%22urn:ngsi-ld:Room:Room001%22"
								},
								{
									"key": "timerel",
									"value": "before"
								},
								{
									"key": "timeAt",
									"value": "2024-02-16T09:36:30.184Z"
								},
								{
									"key": "options",
									"value": "temporalValues"
								}
							]
						},
						"description": "Once Mintaka is running, you can check the status by making an HTTP request to the `info` endpoint on the exposed port.  \nSince the configuration includes `ENDPOINTS_INFO_ENABLED=true` and `ENDPOINTS_INFO_SENSITIVE=false` the endpoint should return a response"
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "context-broker-port",
			"value": "1026",
			"type": "string"
		},
		{
			"key": "iot-agent-port",
			"value": "4041",
			"type": "string"
		},
		{
			"key": "temporal-port",
			"value": "8080",
			"type": "string"
		},
		{
			"key": "temporal-port",
			"value": "9090",
			"type": "string",
			"disabled": true
		},
		{
			"key": "iot-agent-json-port",
			"value": "7896",
			"type": "string"
		},
		{
			"key": "application-source",
			"value": "localhost",
			"type": "string",
			"disabled": true
		},
		{
			"key": "application-source",
			"value": "34.143.212.3",
			"type": "string"
		},
		{
			"key": "iot-agent-json-source",
			"value": "34.143.212.3",
			"type": "string",
			"disabled": true
		},
		{
			"key": "iot-agent-json-source",
			"value": "35.198.213.246",
			"type": "string"
		},
		{
			"key": "context-ld",
			"value": "https://raw.githubusercontent.com/dsja612/ngsi-ld-deployment/master/datamodels/context.jsonld",
			"type": "string"
		},
		{
			"key": "gateway",
			"value": "http://34.87.161.144",
			"type": "string"
		}
	]
}